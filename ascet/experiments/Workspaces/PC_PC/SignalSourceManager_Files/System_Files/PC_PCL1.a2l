ASAP2_VERSION 1 41
/begin PROJECT PC_PC
	"Generated by ETAS from Project PC_PC"
	/begin HEADER
		""
		VERSION "000" PROJECT_NO ASD
		/end HEADER
		/begin MODULE PC_PC
		"Generated by ETAS ASCET7 from Project: PC_PC"
		  /begin A2ML
		      block "IF_DATA" taggedunion if_data {
		      "E_TARGET" taggedstruct {
		       (block "SOURCE" struct {
		          char[100];
		          int;
		          long;
		          taggedstruct {
		             "QP_BLOB" uint;
		          };
		       }
		       )*;
		       block "TP_BLOB" struct {
		          ulong;
		          int;
		          int;
		          long;
		          long;
		       };
		       "KP_BLOB" struct {
		          ulong;
		          ulong;
		          uint;
		          struct {
		             long;
		             uint;
		          }
		          [64];
		       };
		       "DP_BLOB" struct {
		          ulong;
		          ulong;
		          uint;
		          struct {
		             long;
		             uint;
		          }
		          [64];
		       };
		      };
		  };
		  /end A2ML
		/begin IF_DATA E_TARGET
		    /begin SOURCE "Task0"
		        /* type   */ 3
		        /* period */ 10
		        QP_BLOB 1
		    /end SOURCE
		    /begin TP_BLOB
		         /* programm id */ 3816834427
		         /* target id   */ 7
		         /*             */ 0 2 0
		    /end TP_BLOB
		/end IF_DATA
		/begin MOD_PAR
		    ""
		    VERSION "000"
		    ADDR_EPK 0x0
		    EPK ""
		    SUPPLIER "ETAS GmbH"
		    CUSTOMER "xxx"
		    CUSTOMER_NO "000"
		    USER "xxx"
		    PHONE_NO "000"
		    ECU "PC"
		    CPU_TYPE "PCx86"
		    NO_OF_INTERFACES 1
		/end MOD_PAR
		/begin MOD_COMMON
		    "Common definitions"
		    BYTE_ORDER MSB_LAST
		    ALIGNMENT_BYTE 1
		    ALIGNMENT_WORD 2
		    ALIGNMENT_LONG 4
		    ALIGNMENT_FLOAT32_IEEE 4
		    ALIGNMENT_FLOAT64_IEEE 8 
		/end MOD_COMMON

		/begin CHARACTERISTIC components.Component.c
			/* long identifier    */ ""
			/* type               */ VALUE
			/* ecu address        */ 0x451022
			/* record layout      */ STANDARD_VALUE_U8
			/* max diff value     */ 0.0
			/* conversion         */ esdl_ident
			/* lower limit        */ 0
			/* upper limit        */ 1
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    DP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 1
			/end IF_DATA
		/end CHARACTERISTIC

		/begin MEASUREMENT components.Component.change
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x451021
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.sound
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x451020
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 4 1001 0 1001 0 1001 0 1001 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.sm
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_components_warningFunctionStatemachineStates
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 3
			ECU_ADDRESS 0x434015
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.on
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x434014
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.counter
			/* long identifier    */ ""
			/* datatype           */ SLONG
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -2147483648
			/* upper limit        */ 2147483647
			ECU_ADDRESS 0x434008
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.dt_
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x43400C
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 3
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.restTime
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434010
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 4
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.base_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434000
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 5
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance.break_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434004
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 0 1000 6
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.sm
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_components_warningFunctionStatemachineStates
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 3
			ECU_ADDRESS 0x43402D
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.on
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x43402C
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.counter
			/* long identifier    */ ""
			/* datatype           */ SLONG
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -2147483648
			/* upper limit        */ 2147483647
			ECU_ADDRESS 0x434020
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.dt_
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434024
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 3
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.restTime
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434028
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 4
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.base_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434018
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 5
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_2.break_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x43401C
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 1 1000 6
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.sm
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_components_warningFunctionStatemachineStates
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 3
			ECU_ADDRESS 0x434045
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.on
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x434044
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.counter
			/* long identifier    */ ""
			/* datatype           */ SLONG
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -2147483648
			/* upper limit        */ 2147483647
			ECU_ADDRESS 0x434038
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.dt_
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x43403C
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 3
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.restTime
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434040
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 4
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.base_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434030
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 5
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_3.break_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434034
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 2 1000 6
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.sm
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_components_warningFunctionStatemachineStates
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 3
			ECU_ADDRESS 0x43405D
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 0
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.on
			/* long identifier    */ ""
			/* datatype           */ UBYTE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ 0
			/* upper limit        */ 1
			ECU_ADDRESS 0x43405C
			BIT_MASK 0x1
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 1
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.counter
			/* long identifier    */ ""
			/* datatype           */ SLONG
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -2147483648
			/* upper limit        */ 2147483647
			ECU_ADDRESS 0x434050
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 2
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.dt_
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434054
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 3
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.restTime
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434058
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 4
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.base_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x434048
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 5
			/end IF_DATA
		/end MEASUREMENT

		/begin MEASUREMENT components.Component.warningFunction_instance_4.break_rate
			/* long identifier    */ ""
			/* datatype           */ FLOAT32_IEEE
			/* conversion         */ esdl_ident
			/* resolution         */ 1
			/* accuracy           */ 100.0
			/* lower limit        */ -3.4028234663852886E+38
			/* upper limit        */ 3.4028234663852886E+38
			ECU_ADDRESS 0x43404C
			/begin IF_DATA E_TARGET
			    KP_BLOB 0xFFFFFFFF 0xFFFFFFFF 5 1001 0 1001 0 1001 0 1000 3 1000 6
			/end IF_DATA
		/end MEASUREMENT

		/begin COMPU_METHOD esdl_components_warningFunctionStatemachineStates
			/* long identifier    */ ""
			/* type               */ TAB_VERB
			/* format             */ "%12.4"
			/* unit               */ ""
			/* compu_tab_ref      */ COMPU_TAB_REF esdl_components_warningFunctionStatemachineStates_vtab
		/end COMPU_METHOD
		
		/begin COMPU_VTAB esdl_components_warningFunctionStatemachineStates_vtab
			/* long identifier    */ ""
			/* type               */ TAB_VERB
			/* number value pairs */ 4 
			/* value pair         */ 0 "shortState"
			/* value pair         */ 1 "breakState"
			/* value pair         */ 2 "longState"
			/* value pair         */ 3 "mockState"
			/* default value      */ DEFAULT_VALUE "Error"
		/end COMPU_VTAB 
		
		/begin COMPU_METHOD esdl_ident
			/* long identifier    */ ""
			/* type               */ RAT_FUNC
			/* format             */ "%12.4"
			/* unit               */ ""
			/* coeffs             */ COEFFS 0 1 0 0 0 1
		/end COMPU_METHOD
		
		/begin FUNCTION PC_PC
			""
			/begin SUB_FUNCTION
				components.Component
				components.DeltaTimeService
			/end SUB_FUNCTION
		/end FUNCTION
		
		/begin FUNCTION components.Component
			""
			/begin DEF_CHARACTERISTIC
				components.Component.c
			/end DEF_CHARACTERISTIC
			/begin LOC_MEASUREMENT
				components.Component.change
				components.Component.sound
			/end LOC_MEASUREMENT
			/begin SUB_FUNCTION
				components.Component.warningFunction_instance
				components.Component.warningFunction_instance_2
				components.Component.warningFunction_instance_3
				components.Component.warningFunction_instance_4
			/end SUB_FUNCTION
		/end FUNCTION
		
		/begin FUNCTION components.Component.warningFunction_instance
			""
			/begin LOC_MEASUREMENT
				components.Component.warningFunction_instance.base_rate
				components.Component.warningFunction_instance.break_rate
				components.Component.warningFunction_instance.counter
				components.Component.warningFunction_instance.dt_
				components.Component.warningFunction_instance.on
				components.Component.warningFunction_instance.restTime
				components.Component.warningFunction_instance.sm
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.Component.warningFunction_instance_2
			""
			/begin LOC_MEASUREMENT
				components.Component.warningFunction_instance_2.base_rate
				components.Component.warningFunction_instance_2.break_rate
				components.Component.warningFunction_instance_2.counter
				components.Component.warningFunction_instance_2.dt_
				components.Component.warningFunction_instance_2.on
				components.Component.warningFunction_instance_2.restTime
				components.Component.warningFunction_instance_2.sm
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.Component.warningFunction_instance_3
			""
			/begin LOC_MEASUREMENT
				components.Component.warningFunction_instance_3.base_rate
				components.Component.warningFunction_instance_3.break_rate
				components.Component.warningFunction_instance_3.counter
				components.Component.warningFunction_instance_3.dt_
				components.Component.warningFunction_instance_3.on
				components.Component.warningFunction_instance_3.restTime
				components.Component.warningFunction_instance_3.sm
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.Component.warningFunction_instance_4
			""
			/begin LOC_MEASUREMENT
				components.Component.warningFunction_instance_4.base_rate
				components.Component.warningFunction_instance_4.break_rate
				components.Component.warningFunction_instance_4.counter
				components.Component.warningFunction_instance_4.dt_
				components.Component.warningFunction_instance_4.on
				components.Component.warningFunction_instance_4.restTime
				components.Component.warningFunction_instance_4.sm
			/end LOC_MEASUREMENT
		/end FUNCTION
		
		/begin FUNCTION components.DeltaTimeService
			""
		/end FUNCTION
		
		/begin RECORD_LAYOUT STANDARD_VALUE_U8
			/* value              */ FNC_VALUES 1 UBYTE COLUMN_DIR DIRECT
		/end RECORD_LAYOUT
		
		/begin GROUP PC_PC
			""
			ROOT
			/begin SUB_GROUP
				components.Component
				components.DeltaTimeService
			/end SUB_GROUP
		/end GROUP
		
		/begin GROUP components.Component
			""
			/begin REF_CHARACTERISTIC
				components.Component.c
			/end REF_CHARACTERISTIC
			/begin REF_MEASUREMENT
				components.Component.change
				components.Component.sound
			/end REF_MEASUREMENT
			/begin SUB_GROUP
				components.Component.warningFunction_instance
				components.Component.warningFunction_instance_2
				components.Component.warningFunction_instance_3
				components.Component.warningFunction_instance_4
			/end SUB_GROUP
		/end GROUP
		
		/begin GROUP components.Component.warningFunction_instance
			""
			/begin REF_MEASUREMENT
				components.Component.warningFunction_instance.base_rate
				components.Component.warningFunction_instance.break_rate
				components.Component.warningFunction_instance.counter
				components.Component.warningFunction_instance.dt_
				components.Component.warningFunction_instance.on
				components.Component.warningFunction_instance.restTime
				components.Component.warningFunction_instance.sm
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.Component.warningFunction_instance_2
			""
			/begin REF_MEASUREMENT
				components.Component.warningFunction_instance_2.base_rate
				components.Component.warningFunction_instance_2.break_rate
				components.Component.warningFunction_instance_2.counter
				components.Component.warningFunction_instance_2.dt_
				components.Component.warningFunction_instance_2.on
				components.Component.warningFunction_instance_2.restTime
				components.Component.warningFunction_instance_2.sm
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.Component.warningFunction_instance_3
			""
			/begin REF_MEASUREMENT
				components.Component.warningFunction_instance_3.base_rate
				components.Component.warningFunction_instance_3.break_rate
				components.Component.warningFunction_instance_3.counter
				components.Component.warningFunction_instance_3.dt_
				components.Component.warningFunction_instance_3.on
				components.Component.warningFunction_instance_3.restTime
				components.Component.warningFunction_instance_3.sm
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.Component.warningFunction_instance_4
			""
			/begin REF_MEASUREMENT
				components.Component.warningFunction_instance_4.base_rate
				components.Component.warningFunction_instance_4.break_rate
				components.Component.warningFunction_instance_4.counter
				components.Component.warningFunction_instance_4.dt_
				components.Component.warningFunction_instance_4.on
				components.Component.warningFunction_instance_4.restTime
				components.Component.warningFunction_instance_4.sm
			/end REF_MEASUREMENT
		/end GROUP
		
		/begin GROUP components.DeltaTimeService
			""
		/end GROUP
		
	/end MODULE
/end PROJECT
