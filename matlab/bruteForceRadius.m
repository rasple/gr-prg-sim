function [R_RR, R_RL, R_FR, R_FL] = bruteForceRadius()

matrix = load('curve.mat')
w=2.65;
b=1.53;


for i = 1:length(matrix.tv)
    vrl = matrix.vrl(i);
    vrr = matrix.vrr(i);
    vfl = matrix.vfl(i);
    vfr = matrix.vfr(i);
    
    syms r_rr r_rl r_fr r_fl
    eqns = [...
        r_rr / vrr == r_rl / vrl,...
        r_rr / vrr == r_fr / vfr,...
        r_rr / vrr == r_fl / vfl,...
        ...
        r_rl / vrl == r_rr / vrr,...
        r_rl / vrl == r_fr / vfr,...
        r_rl / vrl == r_fl / vfl,...
        ...
        r_fr / vfr == r_rr / vrr,...
        r_fr / vfr == r_rl / vrl,...
        r_fr / vfr == r_fl / vfl,...
        ...
        r_fl / vfl == r_rr / vrr,...
        r_fl / vfl == r_rl / vrl,...
        r_fl / vfl == r_fr / vfr,...
        ...
        r_rr ~= 0,...
        r_rl ~= 0,...
        r_fr ~= 0,...
        r_fl ~= 0];
        
    
    S = solve(eqns, [r_rr r_rl r_fr r_fl]);
   
   R_RR(i) = S.r_rr
   R_RL(i) = S.r_rl
   R_FR(i) = S.r_fr
   R_FL(i) = S.r_fl
end

end