matrix = load('curve.mat')
w=2.65;
b=1.53;

R_FR = zeros(size(matrix.tv));
R_FL = zeros(size(matrix.tv));
R_RR = zeros(size(matrix.tv));
R_RL = zeros(size(matrix.tv));

%equations = [...
%        r_rr == w + r_rl,...
%        r_fr^2 == b^2 + r_rr^2,...
%        r_fl^2 == b^2 + r_rl^2,...
%        b == r_rr * tan(theta_r),...
%        b == r_rl * tan(theta_l)]


for i = 1:length(matrix.tv)
    vrl = matrix.vrl(i);
    vrr = matrix.vrr(i);
    vfl = matrix.vfl(i);
    vfr = matrix.vfr(i);
    
    syms r_rr r_rl r_fr r_fl
    eqns = [
        ...
        r_rr == (vrr * r_rl) / vrl,...
        r_rr == (vrr * r_fr) / vfr,...
        r_rr == (vrr * r_fl) / vfl,...
        ...
        r_rl == (vrl * r_rr) / vrr,...
        r_rl == (vrl * r_fr) / vfr,...
        r_rl == (vrl * r_fl) / vfl,...
        ...
        r_fr == (vfr * r_rr) / vrr,...
        r_fr == (vfr * r_rl) / vrl,...
        r_fr == (vfr * r_fl) / vfl,...
        ...
        r_fl == (vfl * r_rr) / vrr,...
        r_fl == (vfl * r_rl) / vrl,...
        r_fl == (vfl * r_fr) / vfr
        ];
    S = vpasolve(eqns, [r_rr r_rl r_fr r_fl], true);
    R_RR(i) = S.r_rr;
    R_RL(i) = S.r_rl;
    R_FR(i) = S.r_fr;
    R_FL(i) = S.r_fl;  
end

R_RR
R_RL
R_FR
R_FL